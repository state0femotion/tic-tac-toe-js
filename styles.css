*, *::after, *::before {
    box-sizing: border-box;
}

/* assigning variables */
:root { 
    /* cell size in pixels */
    --cell-size:100px; 
    /* content in the cell size */
    --mark-size:calc(var(--cell-size)*.9); 
}

body {
    margin: 0;
    user-select: none;
}

.board {
    /* size of board */
    width: 100vw;
    height: 100vh; 
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3,auto);
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    /* background-color: black; */
    border: 1px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

/* erasing boarder lines */
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}

.cell:first-child,
.cell:nth-child(4),
.cell:nth-child(7) {
    border-left: none;
}

.cell:nth-child(3),
.cell:nth-child(6),
.cell:nth-child(9) {
    border-right: none;
}

.cell:nth-child(7),
.cell:nth-child(8),
.cell:nth-child(9) {
    border-bottom: none;
}

/* makes it seem like you can only click on empty cells */
.cell.x,
.cell.circle {
    cursor:default;
}

.cell.x::before,
.cell.x::after {
    background-color: rgb(0, 0, 0);
}

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
    background-color: lightgrey;
    
}



.cell.x::before,
.cell.x::after,
/* when its x's turn, create a shadow when hovering over an empty cell */
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before {
    /* rotate rectangles so they make an x */
    transform: rotate(45deg);
}

.cell.x::after, 
.board.x .cell:not(.x):not(.circle):hover::after {
    /* rotate rectangles so they make an x */
    transform: rotate(-45deg);
} 

.cell.circle::before,
.cell.circle::after {
    background-color: black;
}

.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
    background-color: lightgrey;
    
}

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before, 
.board.circle .cell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    /* turns rectangle into circle */
    border-radius: 50%;
}

.cell.circle::before, 
.board.circle .cell:not(.x):not(.circle):hover::before {
    /* outside circle of O */
    width: calc(var(--mark-size)*0.85);
    height: calc(var(--mark-size)*0.85);
}

.cell.circle::after, 
.board.circle .cell:not(.x):not(.circle):hover::after {
    /* inside circle of O  */
    width: calc(var(--mark-size)* 0.6);
    height: calc(var(--mark-size)* 0.6);
    background-color: white;
}

.winning-message {
    display: none;
    position:fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgb(0, 0, 0);
    justify-content: center ;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
}

.winning-message button {
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    border: .25cm .5em;
    cursor: pointer;
}

.winning-message button:hover {
    background-color: black ;
    color: white;
    border-color: white;
}

.winning-message.show{
    display: flex;
}